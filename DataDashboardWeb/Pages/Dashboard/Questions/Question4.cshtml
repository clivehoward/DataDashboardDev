@page
@model DataDashboardWeb.Pages.Dashboard.Questions.Question4Model
@{
    ViewData["Title"] = "Mobile Operating Systems support, currently and in the future";
    Layout = "~/Pages/_DashboardLayout.cshtml";
}

<style>

    #chart1Legend ul {
        list-style: none;
        margin-left: 0px;
        padding-left: 0px;
    }

    #chart1Legend li {
        display: block;
        padding-right: 10px;
    }

        #chart1Legend li span {
            width: 20px;
            height: 10px;
            display: inline-block;
            margin-right: 10px;
        }

    #chartjs-tooltip {
        opacity: 1;
        position: fixed;
        background: rgba(0, 0, 0, .7);
        color: white;
        border-radius: 3px;
        -webkit-transition: all .1s ease;
        transition: all .1s ease;
        pointer-events: none;
        -webkit-transform: translate(-50%, 0);
        transform: translate(-50%, 0);
    }

        #chartjs-tooltip table td {
            font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
            font-size: 10pt;
        }

    .chartjs-tooltip-key {
        display: inline-block;
        width: 10px;
        height: 10px;
        margin-right: 10px;
    }

</style>

<div class="panel panel-default">
    <div class="panel-body">

        <div class="row">
            <div class="col-md-6 col-sm-12 col-xs-12">

                <div class="dropdown">
                    <button class="btn dropdown-toggle" type="button" data-toggle="dropdown" id="viewDataDropdown">
                        Please select the data that you would like to view
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu">
                        <li><a href="/Dashboard/Questions/Question4">Mobile Operating Systems support, currently and in the future</a></li>
                        <li><a href="/Dashboard/Questions/Question36">Mobile App development in-house versus outsourced</a></li>
                        <li><a href="/Dashboard/Questions/Question46">Number of mobile apps developed for internal use</a></li>
                        <li><a href="/Dashboard/Questions/Question47">Number of mobile apps developed for external use</a></li>
                        <li><a href="/Dashboard/Questions/Question49">Mobile Operating systems currently supported</a></li>
                        <li><a href="/Dashboard/Questions/Question51">Prominence of mobile Operating systems</a></li>
                    </ul>
                </div>

            </div>
            <div class="col-md-6 col-sm-12 col-xs-12 text-right">

                <div class="btn-group">
                    <a class="btn btn-default dropdown-toggle disabled" aria-expanded="false" href="#" data-toggle="dropdown" id="btnDownloadOptions">
                        Download
                        <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        <li><a href="#" id="btnSaveChartAsImage">Chart (.png)</a></li>
                        <li><a href="#" id="btnSaveDataAsImage">Data (.png)</a></li>
                    </ul>
                </div>

            </div>
        </div>

    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        <h4>@ViewData["Title"]</h4>
    </div>
</div>

@if (Model.ChartRawData.TotalResults == 0)
{
    <div class="panel panel-default">
        <div class="panel-body">

            <div class="row">
                <div class="col-md-1 hidden-xs hidden-sm text-center">
                    <span class="no-data-icon"><i class="fas fa-exclamation"></i></span>
                </div>
                <div class="col-md-11 col-xs-12 col-sm-12">
                    <h2>Sorry</h2>
                    <p>There is no data available, please check your selected filters and perhaps widen your criteria.</p>
                </div>
            </div>

        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-md-4">

            <div class="panel panel-default">
                <div class="panel-heading">Currently</div>
                <div class="panel-body">
                    <canvas id="chart1" width="100%" height="100%"></canvas>
                </div>
            </div>

        </div>
        <div class="col-md-4">

            <div class="panel panel-default">
                <div class="panel-heading">In Future</div>
                <div class="panel-body">
                    <canvas id="chart2" width="100%" height="100%"></canvas>
                </div>
            </div>

        </div>
        <div class="col-md-4">

            <div class="panel panel-default">
                <div class="panel-heading">Legend</div>
                <div class="panel-body">
                    <div id="chart1Legend"></div>
                </div>
            </div>

        </div>
    </div>

    <div id="chartjs-tooltip">
        <table></table>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Data &nbsp;<small><cite>ALL figures are percentages</cite> - select column heading to re-order results</small></div>
        <table class="table table-condensed table-hover" id="allDataTable">
            <thead>
                <tr>
                    <th></th>
                    <th>Currently</th>
                    <th>In Future</th>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.ChartRawData.Labels.Count; i++)
                {
                    <tr>
                        <td>@Model.ChartRawData.Labels[i]</td>
                        <td>@Model.ChartRawData.Results.Where(r => r.Name == "Currently").SelectMany(r => r.Values.Select(s => s.Value)).Skip(i).Take(1).Single().ToString()</td>
                        <td>@Model.ChartRawData.Results.Where(r => r.Name == "Future").SelectMany(r => r.Values.Select(s => s.Value)).Skip(i).Take(1).Single().ToString()</td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="panel-footer"><small>@Model.ChartRawData.TotalResults% of those that could answer this question actually did</small></div>
    </div>
}

@section scripts {
    <script>

        $(function () {
            var section = "Topic Area: Mobile";
            $("#navDropdownSelected").html(section + '&nbsp;<span class="caret"></span>');
            var question = "Mobile Operating Systems support, currently and in the future";
            $("#viewDataDropdown").html(question + '&nbsp;<span class="caret"></span>');
        });

@if (Model.ChartRawData.TotalResults > 0)
{
	<text>
        // CUSTOM TOOLTIP ///////////////////////////////////////////////////////////////////
        Chart.defaults.global.tooltips.custom = function (tooltip) {
            // Tooltip Element
            var tooltipEl = document.getElementById('chartjs-tooltip');

            // Hide if no tooltip
            if (tooltip.opacity === 0) {
                tooltipEl.style.opacity = 0;
                return;
            }

            // Set caret Position
            tooltipEl.classList.remove('above', 'below', 'no-transform');
            if (tooltip.yAlign) {
                tooltipEl.classList.add(tooltip.yAlign);
            } else {
                tooltipEl.classList.add('no-transform');
            }

            function getBody(bodyItem) {
                return bodyItem.lines;
            }

            // Set Text
            if (tooltip.body) {
                var titleLines = tooltip.title || [];
                var bodyLines = tooltip.body.map(getBody);

                var innerHtml = '<thead>';

                titleLines.forEach(function (title) {
                    innerHtml += '<tr><th>' + title + '</th></tr>';
                });
                innerHtml += '</thead><tbody>';

                bodyLines.forEach(function (body, i) {
                    var colors = tooltip.labelColors[i];
                    var style = 'background:' + colors.backgroundColor;
                    style += '; border-color:' + colors.borderColor;
                    style += '; border-width: 2px';
                    var span = '<span class="chartjs-tooltip-key" style="' + style + '"></span>';
                    innerHtml += '<tr><td>' + span + body + '%</td></tr>';
                });
                innerHtml += '</tbody>';

                var tableRoot = tooltipEl.querySelector('table');
                tableRoot.innerHTML = innerHtml;
            }

            var positionY = this._chart.canvas.offsetTop;
            var positionX = this._chart.canvas.offsetLeft;

            // Display, position, and set styles for font
            tooltipEl.style.opacity = 1;
            tooltipEl.style.left = event.clientX + 'px'; //positionX + tooltip.caretX + 'px';
            tooltipEl.style.top = event.clientY + 'px'; //positionY + tooltip.caretY + 'px';
            tooltipEl.style.fontFamily = tooltip._fontFamily;
            tooltipEl.style.fontSize = tooltip.fontSize;
            tooltipEl.style.fontStyle = tooltip._fontStyle;
            tooltipEl.style.padding = tooltip.yPadding + 'px ' + tooltip.xPadding + 'px';
        };


        // CHART 1 ///////////////////////////////////////////////////////////////////
        var ctx1 = document.getElementById('chart1').getContext('2d');

        var chart1 = new Chart(ctx1, {
            type: 'doughnut',
            data: {
                labels: [@Html.Raw(Model.Chart1.Labels)],
                datasets: [{
                    label: "@Html.Raw(Model.Chart1.DataSetName)",
                    backgroundColor: [@Html.Raw(Model.Chart1.Colors)],
                    data: [@Html.Raw(Model.Chart1.DataValues)],
                }]
            },
            options: {
                cutoutPercentage: 35,
                legend: {
                    display: false,
                },
                tooltips: {
                    enabled: false,
                },
            }
        });

        document.getElementById('chart1Legend').innerHTML = chart1.generateLegend();

        // CHART 2 ///////////////////////////////////////////////////////////////////
        var ctx2 = document.getElementById('chart2').getContext('2d');

        var chart2 = new Chart(ctx2, {
            type: 'doughnut',
            data: {
                labels: [@Html.Raw(Model.Chart2.Labels)],
                datasets: [{
                    label: "@Html.Raw(Model.Chart2.DataSetName)",
                    backgroundColor: [@Html.Raw(Model.Chart2.Colors)],
                    data: [@Html.Raw(Model.Chart2.DataValues)],
                }]
            },
            options: {
                cutoutPercentage: 35,
                legend: {
                    display: false,
                },
                tooltips: {
                    enabled: false,
                },
                animation: {
                    onComplete: function () {
                        ChartAnimationComplete();
                    }
                }
            }
        });

        // This enables table sorting (excludes first column)
        $(document).ready(function () {
            $('#allDataTable').DataTable({
                "paging": false,
                "ordering": true,
                "info": false,
                "searching": false,
                "columnDefs": [
                    {
                        "orderable": false,
                        "targets": 0
                    },
                    {
                        "orderSequence": ["desc", "asc"],
                        "targets": [1, 2]
                    }
                ],
                order: [[1, 'desc']]
            });
        });
	</text>
}

    </script>
}